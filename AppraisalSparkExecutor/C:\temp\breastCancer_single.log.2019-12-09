2019-12-09 19:14:23 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 19:14:23
2019-12-09 19:18:54 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 19:18:54
2019-12-09 19:19:21 ERROR Executor:91 â Exception in task 6.0 in stage 94.0 (TID 2892)
org.apache.spark.SparkException: Failed to execute user defined function($anonfun$11: (struct<type:tinyint,size:int,indices:array<int>,values:array<double>>) => struct<type:tinyint,size:int,indices:array<int>,values:array<double>>)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage5.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$15$$anon$2.hasNext(WholeStageCodegenExec.scala:655)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:255)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:247)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
	at org.apache.spark.scheduler.Task.run(Task.scala:123)
	at org.apache.spark.executor.Executor$TaskRunner$$anonfun$10.apply(Executor.scala:408)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1360)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:414)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.spark.SparkException: VectorIndexer encountered invalid value 63.0 on feature index 8. To handle or skip invalid value, try setting VectorIndexer.handleInvalid.
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10$$anonfun$apply$4.apply(VectorIndexer.scala:370)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10$$anonfun$apply$4.apply(VectorIndexer.scala:363)
	at scala.collection.immutable.HashMap$HashMap1.foreach(HashMap.scala:221)
	at scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10.apply(VectorIndexer.scala:363)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10.apply(VectorIndexer.scala:356)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$11.apply(VectorIndexer.scala:431)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$11.apply(VectorIndexer.scala:431)
	... 21 more
2019-12-09 19:19:21 ERROR TaskSetManager:70 â Task 6 in stage 94.0 failed 1 times; aborting job
2019-12-09 19:19:21 ERROR appraisal:54 â org.apache.spark.SparkException: Job aborted due to stage failure: Task 6 in stage 94.0 failed 1 times, most recent failure: Lost task 6.0 in stage 94.0 (TID 2892, localhost, executor driver): org.apache.spark.SparkException: Failed to execute user defined function($anonfun$11: (struct<type:tinyint,size:int,indices:array<int>,values:array<double>>) => struct<type:tinyint,size:int,indices:array<int>,values:array<double>>)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage5.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$15$$anon$2.hasNext(WholeStageCodegenExec.scala:655)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:255)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:247)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
	at org.apache.spark.scheduler.Task.run(Task.scala:123)
	at org.apache.spark.executor.Executor$TaskRunner$$anonfun$10.apply(Executor.scala:408)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1360)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:414)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.spark.SparkException: VectorIndexer encountered invalid value 63.0 on feature index 8. To handle or skip invalid value, try setting VectorIndexer.handleInvalid.
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10$$anonfun$apply$4.apply(VectorIndexer.scala:370)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10$$anonfun$apply$4.apply(VectorIndexer.scala:363)
	at scala.collection.immutable.HashMap$HashMap1.foreach(HashMap.scala:221)
	at scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10.apply(VectorIndexer.scala:363)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10.apply(VectorIndexer.scala:356)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$11.apply(VectorIndexer.scala:431)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$11.apply(VectorIndexer.scala:431)
	... 21 more

Driver stacktrace:
2019-12-09 19:24:15 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 19:24:15
2019-12-09 19:25:50 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 19:25:50
2019-12-09 19:28:53 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 19:28:53
2019-12-09 19:31:35 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 19:31:35
2019-12-09 19:42:14 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 19:42:14
2019-12-09 19:43:33 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 19:43:33
2019-12-09 19:46:30 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 19:46:30
2019-12-09 19:48:18 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 19:48:18
2019-12-09 19:48:29 ERROR appraisal:54 â org.apache.spark.sql.AnalysisException: Reference 'uniformity_of_cell_size' is ambiguous, could be: uniformity_of_cell_size, uniformity_of_cell_size.;
2019-12-09 19:51:19 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 19:51:19
2019-12-09 19:51:27 ERROR appraisal:54 â org.apache.spark.sql.AnalysisException: cannot resolve '`originalValue`' given input columns: [bare_nuclei, marginal_adhesion, uniformity_of_cell_shape, bare_nuclei, normal_nucleoli, uniformity_of_cell_size, uniformity_of_cell_size, single_epithelial_cell_size, single_epithelial_cell_size, mitoses, clump_thickness, bland_chromatin, normal_nucleoli, mitoses, o.lineId, bland_chromatin, marginal_adhesion, clump_thickness, uniformity_of_cell_shape];;
'Project ['originalValue, lineId#32L]
+- Project [lineId#32L, clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, bare_nuclei#173, bland_chromatin#184, normal_nucleoli#195, mitoses#206, clump_thickness#584, uniformity_of_cell_size#581, uniformity_of_cell_shape#577, marginal_adhesion#572, single_epithelial_cell_size#566, bare_nuclei#559, bland_chromatin#551, normal_nucleoli#542, mitoses#532]
   +- Join Inner, (lineId#32L = lineId#586L)
      :- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,DoubleType,true), StructField(uniformity_of_cell_size,DoubleType,true), StructField(uniformity_of_cell_shape,DoubleType,true), StructField(marginal_adhesion,DoubleType,true), StructField(single_epithelial_cell_size,DoubleType,true), StructField(bare_nuclei,DoubleType,true), StructField(bland_chromatin,DoubleType,true), StructField(normal_nucleoli,DoubleType,true), StructField(mitoses,DoubleType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, bare_nuclei#173, bland_chromatin#184, normal_nucleoli#195, mitoses#206, lineId#32L, StructField(clump_thickness,DoubleType,true), StructField(uniformity_of_cell_size,DoubleType,true), StructField(uniformity_of_cell_shape,DoubleType,true), StructField(marginal_adhesion,DoubleType,true), StructField(single_epithelial_cell_size,DoubleType,true), StructField(bare_nuclei,DoubleType,true), StructField(bland_chromatin,DoubleType,true), StructField(normal_nucleoli,DoubleType,true), StructField(mitoses,DoubleType,true), StructField(lineId,LongType,false))
      :  +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, bare_nuclei#173, bland_chromatin#184, normal_nucleoli#195, UDF(mitoses#19) AS mitoses#206, lineId#32L]
      :     +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, bare_nuclei#173, bland_chromatin#184, UDF(normal_nucleoli#18) AS normal_nucleoli#195, mitoses#19, lineId#32L]
      :        +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, bare_nuclei#173, UDF(bland_chromatin#17) AS bland_chromatin#184, normal_nucleoli#18, mitoses#19, lineId#32L]
      :           +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, UDF(bare_nuclei#16) AS bare_nuclei#173, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
      :              +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, UDF(single_epithelial_cell_size#15) AS single_epithelial_cell_size#162, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
      :                 +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, UDF(marginal_adhesion#14) AS marginal_adhesion#151, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
      :                    +- Project [clump_thickness#118, uniformity_of_cell_size#129, UDF(uniformity_of_cell_shape#13) AS uniformity_of_cell_shape#140, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
      :                       +- Project [clump_thickness#118, UDF(uniformity_of_cell_size#82) AS uniformity_of_cell_size#129, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
      :                          +- Project [UDF(clump_thickness#11) AS clump_thickness#118, uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
      :                             +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
      :                                +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
      :                                   +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
      :                                      +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
      :                                         +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
      :                                            +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
      :                                               +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
      :                                                  +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
      :                                                     +- Project [clump_thickness#11, uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
      :                                                        +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, lineId#32L]
      :                                                           +- Project [code_number#10, clump_thickness#11, ncolumn#64 AS uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, lineId#32L, ncolumn#64]
      :                                                              +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, lineId#32L, ncolumn#64]
      :                                                                 +- Filter (lineId#32L = lineId#68L)
      :                                                                    +- Join Inner
      :                                                                       :- SubqueryAlias `o`
      :                                                                       :  +- SubqueryAlias `originaldb`
      :                                                                       :     +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, monotonically_increasing_id() AS lineId#32L]
      :                                                                       :        +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv
      :                                                                       +- SubqueryAlias `n`
      :                                                                          +- SubqueryAlias `ncoldf`
      :                                                                             +- Project [lineId#68L, CASE WHEN (lineId#68L = lineId#65L) THEN cast(null as string) ELSE uniformity_of_cell_size#12 END AS ncolumn#64]
      :                                                                                +- Join LeftOuter, (lineId#68L = lineId#65L)
      :                                                                                   :- SubqueryAlias `o`
      :                                                                                   :  +- SubqueryAlias `originaldb`
      :                                                                                   :     +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, monotonically_increasing_id() AS lineId#68L]
      :                                                                                   :        +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv
      :                                                                                   +- SubqueryAlias `n`
      :                                                                                      +- SubqueryAlias `niddf`
      :                                                                                         +- GlobalLimit 14
      :                                                                                            +- LocalLimit 14
      :                                                                                               +- Project [lineId#65L]
      :                                                                                                  +- Sort [_nondeterministic#62 ASC NULLS FIRST], true
      :                                                                                                     +- Project [lineId#65L, rand(7239179876725295497) AS _nondeterministic#62]
      :                                                                                                        +- Project [lineId#65L]
      :                                                                                                           +- SubqueryAlias `originaldb`
      :                                                                                                              +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, monotonically_increasing_id() AS lineId#65L]
      :                                                                                                                 +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv
      +- Project [clump_thickness#584, uniformity_of_cell_size#581, uniformity_of_cell_shape#577, marginal_adhesion#572, single_epithelial_cell_size#566, bare_nuclei#559, bland_chromatin#551, normal_nucleoli#542, UDF(mitoses#19) AS mitoses#532, lineId#586L]
         +- Project [clump_thickness#584, uniformity_of_cell_size#581, uniformity_of_cell_shape#577, marginal_adhesion#572, single_epithelial_cell_size#566, bare_nuclei#559, bland_chromatin#551, UDF(normal_nucleoli#18) AS normal_nucleoli#542, mitoses#19, lineId#586L]
            +- Project [clump_thickness#584, uniformity_of_cell_size#581, uniformity_of_cell_shape#577, marginal_adhesion#572, single_epithelial_cell_size#566, bare_nuclei#559, UDF(bland_chromatin#17) AS bland_chromatin#551, normal_nucleoli#18, mitoses#19, lineId#586L]
               +- Project [clump_thickness#584, uniformity_of_cell_size#581, uniformity_of_cell_shape#577, marginal_adhesion#572, single_epithelial_cell_size#566, UDF(bare_nuclei#16) AS bare_nuclei#559, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#586L]
                  +- Project [clump_thickness#584, uniformity_of_cell_size#581, uniformity_of_cell_shape#577, marginal_adhesion#572, UDF(single_epithelial_cell_size#15) AS single_epithelial_cell_size#566, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#586L]
                     +- Project [clump_thickness#584, uniformity_of_cell_size#581, uniformity_of_cell_shape#577, UDF(marginal_adhesion#14) AS marginal_adhesion#572, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#586L]
                        +- Project [clump_thickness#584, uniformity_of_cell_size#581, UDF(uniformity_of_cell_shape#13) AS uniformity_of_cell_shape#577, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#586L]
                           +- Project [clump_thickness#584, UDF(uniformity_of_cell_size#82) AS uniformity_of_cell_size#581, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#586L]
                              +- Project [UDF(clump_thickness#11) AS clump_thickness#584, uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#586L]
                                 +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#586L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                    +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#586L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                       +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#586L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                          +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#586L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                             +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#586L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#586L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                   +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#586L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                      +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#586L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                         +- Project [clump_thickness#11, uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#586L]
                                                            +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, lineId#586L]
                                                               +- Project [code_number#10, clump_thickness#11, ncolumn#64 AS uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, lineId#586L, ncolumn#64]
                                                                  +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, lineId#586L, ncolumn#64]
                                                                     +- Filter (lineId#586L = lineId#68L)
                                                                        +- Join Inner
                                                                           :- SubqueryAlias `o`
                                                                           :  +- SubqueryAlias `originaldb`
                                                                           :     +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, monotonically_increasing_id() AS lineId#586L]
                                                                           :        +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv
                                                                           +- SubqueryAlias `n`
                                                                              +- SubqueryAlias `ncoldf`
                                                                                 +- Project [lineId#68L, CASE WHEN (lineId#68L = lineId#65L) THEN cast(null as string) ELSE uniformity_of_cell_size#12 END AS ncolumn#64]
                                                                                    +- Join LeftOuter, (lineId#68L = lineId#65L)
                                                                                       :- SubqueryAlias `o`
                                                                                       :  +- SubqueryAlias `originaldb`
                                                                                       :     +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, monotonically_increasing_id() AS lineId#68L]
                                                                                       :        +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv
                                                                                       +- SubqueryAlias `n`
                                                                                          +- SubqueryAlias `niddf`
                                                                                             +- GlobalLimit 14
                                                                                                +- LocalLimit 14
                                                                                                   +- Project [lineId#65L]
                                                                                                      +- Sort [_nondeterministic#62 ASC NULLS FIRST], true
                                                                                                         +- Project [lineId#65L, rand(7239179876725295497) AS _nondeterministic#62]
                                                                                                            +- Project [lineId#65L]
                                                                                                               +- SubqueryAlias `originaldb`
                                                                                                                  +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, monotonically_increasing_id() AS lineId#65L]
                                                                                                                     +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv

2019-12-09 19:56:22 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 19:56:22
2019-12-09 19:58:58 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 19:58:58
2019-12-09 19:59:05 ERROR appraisal:54 â org.apache.spark.sql.AnalysisException: USING column `lineId` cannot be resolved on the left side of the join. The left-side columns: [uniformity_of_cell_size, originalValue];
2019-12-09 19:59:56 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 19:59:56
2019-12-09 20:00:04 ERROR appraisal:54 â org.apache.spark.sql.AnalysisException: cannot resolve '`uniformity_of_cell_size`' given input columns: [lineId];;
'Project [lineId#32L, 'uniformity_of_cell_size AS originalValue#405]
+- Project [lineId#32L]
   +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, single_epithelial_cell_size#271, bare_nuclei#282, bland_chromatin#293, normal_nucleoli#304, UDF(mitoses#19) AS mitoses#315, lineId#32L]
      +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, single_epithelial_cell_size#271, bare_nuclei#282, bland_chromatin#293, UDF(normal_nucleoli#18) AS normal_nucleoli#304, mitoses#19, lineId#32L]
         +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, single_epithelial_cell_size#271, bare_nuclei#282, UDF(bland_chromatin#17) AS bland_chromatin#293, normal_nucleoli#18, mitoses#19, lineId#32L]
            +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, single_epithelial_cell_size#271, UDF(bare_nuclei#16) AS bare_nuclei#282, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
               +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, UDF(single_epithelial_cell_size#15) AS single_epithelial_cell_size#271, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                  +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, UDF(marginal_adhesion#14) AS marginal_adhesion#260, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                     +- Project [clump_thickness#227, uniformity_of_cell_size#238, UDF(uniformity_of_cell_shape#13) AS uniformity_of_cell_shape#249, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                        +- Project [clump_thickness#227, UDF(uniformity_of_cell_size#12) AS uniformity_of_cell_size#238, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                           +- Project [UDF(clump_thickness#11) AS clump_thickness#227, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                              +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                 +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                    +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                       +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                          +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                             +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                   +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                      +- Project [clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                                                         +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, monotonically_increasing_id() AS lineId#32L]
                                                            +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv

2019-12-09 20:00:29 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:00:29
2019-12-09 20:01:30 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:01:30
2019-12-09 20:08:17 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:08:17
2019-12-09 20:10:58 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:10:58
2019-12-09 20:11:36 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:11:36
2019-12-09 20:12:56 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:12:56
2019-12-09 20:13:06 ERROR appraisal:54 â org.apache.spark.sql.AnalysisException: Detected implicit cartesian product for INNER join between logical plans
Project [features#769, lineId#722L]
+- Join Inner, (id#771L = id#724L)
   :- Project [UDF(value#765) AS features#769, monotonically_increasing_id() AS id#771L]
   :  +- SerializeFromObject [newInstance(class org.apache.spark.sql.catalyst.util.GenericArrayData) AS value#765]
   :     +- ExternalRDD [obj#764]
   +- Project [lineId#722L, id#724L]
      +- LogicalRDD [uniformity_of_cell_size#721, lineId#722L, label#723, id#724L], false
and
Project [originalValue#406, lineId#32L]
+- Join Inner, (lineId#32L = lineId#495L)
   :- Project [lineId#32L, UDF(uniformity_of_cell_size#12) AS originalValue#406]
   :  +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
   :     +- Project [clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, monotonically_increasing_id() AS lineId#32L]
   :        +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv
   +- Project [lineId#495L]
      +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
         +- Project [clump_thickness#11, ncolumn#64 AS uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
            +- Join Inner, (lineId#495L = lineId#68L)
               :- Project [clump_thickness#11, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, monotonically_increasing_id() AS lineId#495L]
               :  +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv
               +- Project [lineId#68L, CASE WHEN (lineId#68L = lineId#65L) THEN null ELSE uniformity_of_cell_size#12 END AS ncolumn#64]
                  +- Join LeftOuter, (lineId#68L = lineId#65L)
                     :- Project [uniformity_of_cell_size#12, monotonically_increasing_id() AS lineId#68L]
                     :  +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv
                     +- GlobalLimit 14
                        +- LocalLimit 14
                           +- Project [lineId#65L]
                              +- Sort [_nondeterministic#62 ASC NULLS FIRST], true
                                 +- Project [lineId#65L, rand(6995700597392099585) AS _nondeterministic#62]
                                    +- Project [monotonically_increasing_id() AS lineId#65L]
                                       +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv
Join condition is missing or trivial.
Either: use the CROSS JOIN syntax to allow cartesian products between these
relations, or: enable implicit cartesian products by setting the configuration
variable spark.sql.crossJoin.enabled=true;
2019-12-09 20:13:46 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:13:46
2019-12-09 20:14:09 ERROR appraisal:54 â org.apache.spark.sql.AnalysisException: cannot resolve '`uniformity_of_cell_size`' given input columns: [originalValue, indexedFeatures, prediction, features, lineId];;
'Project [prediction#886, 'uniformity_of_cell_size, features#769]
+- Project [lineId#722L, features#769, originalValue#406, indexedFeatures#881, UDF(indexedFeatures#881) AS prediction#886]
   +- Project [lineId#722L, features#769, originalValue#406, UDF(features#769) AS indexedFeatures#881]
      +- Project [lineId#722L, features#769, originalValue#406]
         +- Join Inner, (lineId#722L = lineId#32L)
            :- Project [features#769, lineId#722L]
            :  +- Project [features#769, uniformity_of_cell_size#721, lineId#722L, label#723]
            :     +- Project [id#771L, features#769, uniformity_of_cell_size#721, lineId#722L, label#723]
            :        +- Join Inner, (id#771L = id#724L)
            :           :- Project [features#769, monotonically_increasing_id() AS id#771L]
            :           :  +- Project [UDF(features#767) AS features#769]
            :           :     +- Project [value#765 AS features#767]
            :           :        +- SerializeFromObject [newInstance(class org.apache.spark.sql.catalyst.util.GenericArrayData) AS value#765]
            :           :           +- ExternalRDD [obj#764]
            :           +- LogicalRDD [uniformity_of_cell_size#721, lineId#722L, label#723, id#724L], false
            +- Project [originalValue#406, lineId#32L]
               +- Project [lineId#32L, uniformity_of_cell_size#238, originalValue#406, clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, bare_nuclei#173, bland_chromatin#184, normal_nucleoli#195, mitoses#206]
                  +- Join Inner, (lineId#32L = lineId#495L)
                     :- Project [uniformity_of_cell_size#238, lineId#32L, uniformity_of_cell_size#238 AS originalValue#406]
                     :  +- Project [uniformity_of_cell_size#238, lineId#32L]
                     :     +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, single_epithelial_cell_size#271, bare_nuclei#282, bland_chromatin#293, normal_nucleoli#304, UDF(mitoses#19) AS mitoses#315, lineId#32L]
                     :        +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, single_epithelial_cell_size#271, bare_nuclei#282, bland_chromatin#293, UDF(normal_nucleoli#18) AS normal_nucleoli#304, mitoses#19, lineId#32L]
                     :           +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, single_epithelial_cell_size#271, bare_nuclei#282, UDF(bland_chromatin#17) AS bland_chromatin#293, normal_nucleoli#18, mitoses#19, lineId#32L]
                     :              +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, single_epithelial_cell_size#271, UDF(bare_nuclei#16) AS bare_nuclei#282, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                     :                 +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, UDF(single_epithelial_cell_size#15) AS single_epithelial_cell_size#271, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                     :                    +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, UDF(marginal_adhesion#14) AS marginal_adhesion#260, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                     :                       +- Project [clump_thickness#227, uniformity_of_cell_size#238, UDF(uniformity_of_cell_shape#13) AS uniformity_of_cell_shape#249, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                     :                          +- Project [clump_thickness#227, UDF(uniformity_of_cell_size#12) AS uniformity_of_cell_size#238, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                     :                             +- Project [UDF(clump_thickness#11) AS clump_thickness#227, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                     :                                +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                     :                                   +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                     :                                      +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                     :                                         +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                     :                                            +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                     :                                               +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                     :                                                  +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                     :                                                     +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                     :                                                        +- Project [clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                     :                                                           +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, monotonically_increasing_id() AS lineId#32L]
                     :                                                              +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv
                     +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, bare_nuclei#173, bland_chromatin#184, normal_nucleoli#195, UDF(mitoses#19) AS mitoses#206, lineId#495L]
                        +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, bare_nuclei#173, bland_chromatin#184, UDF(normal_nucleoli#18) AS normal_nucleoli#195, mitoses#19, lineId#495L]
                           +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, bare_nuclei#173, UDF(bland_chromatin#17) AS bland_chromatin#184, normal_nucleoli#18, mitoses#19, lineId#495L]
                              +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, UDF(bare_nuclei#16) AS bare_nuclei#173, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                                 +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, UDF(single_epithelial_cell_size#15) AS single_epithelial_cell_size#162, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                                    +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, UDF(marginal_adhesion#14) AS marginal_adhesion#151, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                                       +- Project [clump_thickness#118, uniformity_of_cell_size#129, UDF(uniformity_of_cell_shape#13) AS uniformity_of_cell_shape#140, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                                          +- Project [clump_thickness#118, UDF(uniformity_of_cell_size#82) AS uniformity_of_cell_size#129, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                                             +- Project [UDF(clump_thickness#11) AS clump_thickness#118, uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                                                +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                   +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                      +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                         +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                            +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                               +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                                  +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                                     +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                                        +- Project [clump_thickness#11, uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                                                                           +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, lineId#495L]
                                                                              +- Project [code_number#10, clump_thickness#11, ncolumn#64 AS uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, lineId#495L, ncolumn#64]
                                                                                 +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, lineId#495L, ncolumn#64]
                                                                                    +- Filter (lineId#495L = lineId#68L)
                                                                                       +- Join Inner
                                                                                          :- SubqueryAlias `o`
                                                                                          :  +- SubqueryAlias `originaldb`
                                                                                          :     +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, monotonically_increasing_id() AS lineId#495L]
                                                                                          :        +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv
                                                                                          +- SubqueryAlias `n`
                                                                                             +- SubqueryAlias `ncoldf`
                                                                                                +- Project [lineId#68L, CASE WHEN (lineId#68L = lineId#65L) THEN cast(null as string) ELSE uniformity_of_cell_size#12 END AS ncolumn#64]
                                                                                                   +- Join LeftOuter, (lineId#68L = lineId#65L)
                                                                                                      :- SubqueryAlias `o`
                                                                                                      :  +- SubqueryAlias `originaldb`
                                                                                                      :     +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, monotonically_increasing_id() AS lineId#68L]
                                                                                                      :        +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv
                                                                                                      +- SubqueryAlias `n`
                                                                                                         +- SubqueryAlias `niddf`
                                                                                                            +- GlobalLimit 14
                                                                                                               +- LocalLimit 14
                                                                                                                  +- Project [lineId#65L]
                                                                                                                     +- Sort [_nondeterministic#62 ASC NULLS FIRST], true
                                                                                                                        +- Project [lineId#65L, rand(4708559113533745371) AS _nondeterministic#62]
                                                                                                                           +- Project [lineId#65L]
                                                                                                                              +- SubqueryAlias `originaldb`
                                                                                                                                 +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, monotonically_increasing_id() AS lineId#65L]
                                                                                                                                    +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv

2019-12-09 20:15:18 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:15:18
2019-12-09 20:15:27 ERROR appraisal:54 â org.apache.spark.sql.AnalysisException: USING column `lineId` cannot be resolved on the left side of the join. The left-side columns: [features, id];
2019-12-09 20:15:56 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:15:56
2019-12-09 20:16:04 ERROR appraisal:54 â org.apache.spark.sql.AnalysisException: USING column `lineId` cannot be resolved on the left side of the join. The left-side columns: [features];
2019-12-09 20:17:09 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:17:09
2019-12-09 20:17:18 ERROR appraisal:54 â org.apache.spark.sql.AnalysisException: cannot resolve '`lineId`' given input columns: [features];;
'Project [features#650, 'lineId AS lineId#652]
+- Project [UDF(features#648) AS features#650]
   +- Project [value#646 AS features#648]
      +- SerializeFromObject [newInstance(class org.apache.spark.sql.catalyst.util.GenericArrayData) AS value#646]
         +- ExternalRDD [obj#645]

2019-12-09 20:17:54 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:17:54
2019-12-09 20:18:02 ERROR appraisal:54 â java.lang.IllegalArgumentException: requirement failed: The number of columns doesn't match.
Old column names (1): value
New column names (2): features, lineId
2019-12-09 20:20:25 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:20:25
2019-12-09 20:20:50 ERROR appraisal:54 â org.apache.spark.sql.AnalysisException: cannot resolve '`uniformity_of_cell_size`' given input columns: [features, originalValue, indexedFeatures, prediction];;
'Project [prediction#883, 'uniformity_of_cell_size, features#769]
+- Project [features#769, originalValue#406, indexedFeatures#879, UDF(indexedFeatures#879) AS prediction#883]
   +- Project [features#769, originalValue#406, UDF(features#769) AS indexedFeatures#879]
      +- Project [features#769, originalValue#406]
         +- Project [lineId#722L, features#769, originalValue#406]
            +- Join Inner, (lineId#722L = lineId#32L)
               :- Project [features#769, lineId#722L]
               :  +- Project [features#769, uniformity_of_cell_size#721, lineId#722L, label#723]
               :     +- Project [id#771L, features#769, uniformity_of_cell_size#721, lineId#722L, label#723]
               :        +- Join Inner, (id#771L = id#724L)
               :           :- Project [features#769, monotonically_increasing_id() AS id#771L]
               :           :  +- Project [UDF(features#767) AS features#769]
               :           :     +- Project [value#765 AS features#767]
               :           :        +- SerializeFromObject [newInstance(class org.apache.spark.sql.catalyst.util.GenericArrayData) AS value#765]
               :           :           +- ExternalRDD [obj#764]
               :           +- LogicalRDD [uniformity_of_cell_size#721, lineId#722L, label#723, id#724L], false
               +- Project [originalValue#406, lineId#32L]
                  +- Project [lineId#32L, uniformity_of_cell_size#238, originalValue#406, clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, bare_nuclei#173, bland_chromatin#184, normal_nucleoli#195, mitoses#206]
                     +- Join Inner, (lineId#32L = lineId#495L)
                        :- Project [uniformity_of_cell_size#238, lineId#32L, uniformity_of_cell_size#238 AS originalValue#406]
                        :  +- Project [uniformity_of_cell_size#238, lineId#32L]
                        :     +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, single_epithelial_cell_size#271, bare_nuclei#282, bland_chromatin#293, normal_nucleoli#304, UDF(mitoses#19) AS mitoses#315, lineId#32L]
                        :        +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, single_epithelial_cell_size#271, bare_nuclei#282, bland_chromatin#293, UDF(normal_nucleoli#18) AS normal_nucleoli#304, mitoses#19, lineId#32L]
                        :           +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, single_epithelial_cell_size#271, bare_nuclei#282, UDF(bland_chromatin#17) AS bland_chromatin#293, normal_nucleoli#18, mitoses#19, lineId#32L]
                        :              +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, single_epithelial_cell_size#271, UDF(bare_nuclei#16) AS bare_nuclei#282, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                        :                 +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, UDF(single_epithelial_cell_size#15) AS single_epithelial_cell_size#271, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                        :                    +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, UDF(marginal_adhesion#14) AS marginal_adhesion#260, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                        :                       +- Project [clump_thickness#227, uniformity_of_cell_size#238, UDF(uniformity_of_cell_shape#13) AS uniformity_of_cell_shape#249, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                        :                          +- Project [clump_thickness#227, UDF(uniformity_of_cell_size#12) AS uniformity_of_cell_size#238, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                        :                             +- Project [UDF(clump_thickness#11) AS clump_thickness#227, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                        :                                +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                        :                                   +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                        :                                      +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                        :                                         +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                        :                                            +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                        :                                               +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                        :                                                  +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                        :                                                     +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                        :                                                        +- Project [clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
                        :                                                           +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, monotonically_increasing_id() AS lineId#32L]
                        :                                                              +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv
                        +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, bare_nuclei#173, bland_chromatin#184, normal_nucleoli#195, UDF(mitoses#19) AS mitoses#206, lineId#495L]
                           +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, bare_nuclei#173, bland_chromatin#184, UDF(normal_nucleoli#18) AS normal_nucleoli#195, mitoses#19, lineId#495L]
                              +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, bare_nuclei#173, UDF(bland_chromatin#17) AS bland_chromatin#184, normal_nucleoli#18, mitoses#19, lineId#495L]
                                 +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, UDF(bare_nuclei#16) AS bare_nuclei#173, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                                    +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, UDF(single_epithelial_cell_size#15) AS single_epithelial_cell_size#162, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                                       +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, UDF(marginal_adhesion#14) AS marginal_adhesion#151, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                                          +- Project [clump_thickness#118, uniformity_of_cell_size#129, UDF(uniformity_of_cell_shape#13) AS uniformity_of_cell_shape#140, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                                             +- Project [clump_thickness#118, UDF(uniformity_of_cell_size#82) AS uniformity_of_cell_size#129, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                                                +- Project [UDF(clump_thickness#11) AS clump_thickness#118, uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                                                   +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                      +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                         +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                            +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                               +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                                  +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                                     +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                                        +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                                           +- Project [clump_thickness#11, uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                                                                              +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, lineId#495L]
                                                                                 +- Project [code_number#10, clump_thickness#11, ncolumn#64 AS uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, lineId#495L, ncolumn#64]
                                                                                    +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, lineId#495L, ncolumn#64]
                                                                                       +- Filter (lineId#495L = lineId#68L)
                                                                                          +- Join Inner
                                                                                             :- SubqueryAlias `o`
                                                                                             :  +- SubqueryAlias `originaldb`
                                                                                             :     +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, monotonically_increasing_id() AS lineId#495L]
                                                                                             :        +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv
                                                                                             +- SubqueryAlias `n`
                                                                                                +- SubqueryAlias `ncoldf`
                                                                                                   +- Project [lineId#68L, CASE WHEN (lineId#68L = lineId#65L) THEN cast(null as string) ELSE uniformity_of_cell_size#12 END AS ncolumn#64]
                                                                                                      +- Join LeftOuter, (lineId#68L = lineId#65L)
                                                                                                         :- SubqueryAlias `o`
                                                                                                         :  +- SubqueryAlias `originaldb`
                                                                                                         :     +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, monotonically_increasing_id() AS lineId#68L]
                                                                                                         :        +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv
                                                                                                         +- SubqueryAlias `n`
                                                                                                            +- SubqueryAlias `niddf`
                                                                                                               +- GlobalLimit 14
                                                                                                                  +- LocalLimit 14
                                                                                                                     +- Project [lineId#65L]
                                                                                                                        +- Sort [_nondeterministic#62 ASC NULLS FIRST], true
                                                                                                                           +- Project [lineId#65L, rand(-2123372522904278142) AS _nondeterministic#62]
                                                                                                                              +- Project [lineId#65L]
                                                                                                                                 +- SubqueryAlias `originaldb`
                                                                                                                                    +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, monotonically_increasing_id() AS lineId#65L]
                                                                                                                                       +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv

2019-12-09 20:21:06 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:21:06
2019-12-09 20:22:22 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:22:22
2019-12-09 20:22:32 ERROR appraisal:54 â org.apache.spark.sql.AnalysisException: cannot resolve '`label`' given input columns: [lineId, features, originalValue];;
'Project [features#769, lineId#722L, originalValue#406, 'label]
+- Project [lineId#722L, features#769, originalValue#406]
   +- Join Inner, (lineId#722L = lineId#32L)
      :- Project [features#769, lineId#722L]
      :  +- Project [features#769, uniformity_of_cell_size#721, lineId#722L, label#723]
      :     +- Project [id#771L, features#769, uniformity_of_cell_size#721, lineId#722L, label#723]
      :        +- Join Inner, (id#771L = id#724L)
      :           :- Project [features#769, monotonically_increasing_id() AS id#771L]
      :           :  +- Project [UDF(features#767) AS features#769]
      :           :     +- Project [value#765 AS features#767]
      :           :        +- SerializeFromObject [newInstance(class org.apache.spark.sql.catalyst.util.GenericArrayData) AS value#765]
      :           :           +- ExternalRDD [obj#764]
      :           +- LogicalRDD [uniformity_of_cell_size#721, lineId#722L, label#723, id#724L], false
      +- Project [originalValue#406, lineId#32L]
         +- Project [lineId#32L, uniformity_of_cell_size#238, originalValue#406, clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, bare_nuclei#173, bland_chromatin#184, normal_nucleoli#195, mitoses#206]
            +- Join Inner, (lineId#32L = lineId#495L)
               :- Project [uniformity_of_cell_size#238, lineId#32L, uniformity_of_cell_size#238 AS originalValue#406]
               :  +- Project [uniformity_of_cell_size#238, lineId#32L]
               :     +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, single_epithelial_cell_size#271, bare_nuclei#282, bland_chromatin#293, normal_nucleoli#304, UDF(mitoses#19) AS mitoses#315, lineId#32L]
               :        +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, single_epithelial_cell_size#271, bare_nuclei#282, bland_chromatin#293, UDF(normal_nucleoli#18) AS normal_nucleoli#304, mitoses#19, lineId#32L]
               :           +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, single_epithelial_cell_size#271, bare_nuclei#282, UDF(bland_chromatin#17) AS bland_chromatin#293, normal_nucleoli#18, mitoses#19, lineId#32L]
               :              +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, single_epithelial_cell_size#271, UDF(bare_nuclei#16) AS bare_nuclei#282, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
               :                 +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, marginal_adhesion#260, UDF(single_epithelial_cell_size#15) AS single_epithelial_cell_size#271, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
               :                    +- Project [clump_thickness#227, uniformity_of_cell_size#238, uniformity_of_cell_shape#249, UDF(marginal_adhesion#14) AS marginal_adhesion#260, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
               :                       +- Project [clump_thickness#227, uniformity_of_cell_size#238, UDF(uniformity_of_cell_shape#13) AS uniformity_of_cell_shape#249, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
               :                          +- Project [clump_thickness#227, UDF(uniformity_of_cell_size#12) AS uniformity_of_cell_size#238, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
               :                             +- Project [UDF(clump_thickness#11) AS clump_thickness#227, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
               :                                +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
               :                                   +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
               :                                      +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
               :                                         +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
               :                                            +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
               :                                               +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
               :                                                  +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
               :                                                     +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#12.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#32L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
               :                                                        +- Project [clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#32L]
               :                                                           +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, monotonically_increasing_id() AS lineId#32L]
               :                                                              +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv
               +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, bare_nuclei#173, bland_chromatin#184, normal_nucleoli#195, UDF(mitoses#19) AS mitoses#206, lineId#495L]
                  +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, bare_nuclei#173, bland_chromatin#184, UDF(normal_nucleoli#18) AS normal_nucleoli#195, mitoses#19, lineId#495L]
                     +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, bare_nuclei#173, UDF(bland_chromatin#17) AS bland_chromatin#184, normal_nucleoli#18, mitoses#19, lineId#495L]
                        +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, single_epithelial_cell_size#162, UDF(bare_nuclei#16) AS bare_nuclei#173, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                           +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, marginal_adhesion#151, UDF(single_epithelial_cell_size#15) AS single_epithelial_cell_size#162, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                              +- Project [clump_thickness#118, uniformity_of_cell_size#129, uniformity_of_cell_shape#140, UDF(marginal_adhesion#14) AS marginal_adhesion#151, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                                 +- Project [clump_thickness#118, uniformity_of_cell_size#129, UDF(uniformity_of_cell_shape#13) AS uniformity_of_cell_shape#140, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                                    +- Project [clump_thickness#118, UDF(uniformity_of_cell_size#82) AS uniformity_of_cell_size#129, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                                       +- Project [UDF(clump_thickness#11) AS clump_thickness#118, uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                                          +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                             +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                   +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                      +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                         +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                            +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                               +- TypedFilter <function1>, interface org.apache.spark.sql.Row, [StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false)], createexternalrow(clump_thickness#11.toString, uniformity_of_cell_size#82.toString, uniformity_of_cell_shape#13.toString, marginal_adhesion#14.toString, single_epithelial_cell_size#15.toString, bare_nuclei#16.toString, bland_chromatin#17.toString, normal_nucleoli#18.toString, mitoses#19.toString, lineId#495L, StructField(clump_thickness,StringType,true), StructField(uniformity_of_cell_size,StringType,true), StructField(uniformity_of_cell_shape,StringType,true), StructField(marginal_adhesion,StringType,true), StructField(single_epithelial_cell_size,StringType,true), StructField(bare_nuclei,StringType,true), StructField(bland_chromatin,StringType,true), StructField(normal_nucleoli,StringType,true), StructField(mitoses,StringType,true), StructField(lineId,LongType,false))
                                                                  +- Project [clump_thickness#11, uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, lineId#495L]
                                                                     +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, lineId#495L]
                                                                        +- Project [code_number#10, clump_thickness#11, ncolumn#64 AS uniformity_of_cell_size#82, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, lineId#495L, ncolumn#64]
                                                                           +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, lineId#495L, ncolumn#64]
                                                                              +- Filter (lineId#495L = lineId#68L)
                                                                                 +- Join Inner
                                                                                    :- SubqueryAlias `o`
                                                                                    :  +- SubqueryAlias `originaldb`
                                                                                    :     +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, monotonically_increasing_id() AS lineId#495L]
                                                                                    :        +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv
                                                                                    +- SubqueryAlias `n`
                                                                                       +- SubqueryAlias `ncoldf`
                                                                                          +- Project [lineId#68L, CASE WHEN (lineId#68L = lineId#65L) THEN cast(null as string) ELSE uniformity_of_cell_size#12 END AS ncolumn#64]
                                                                                             +- Join LeftOuter, (lineId#68L = lineId#65L)
                                                                                                :- SubqueryAlias `o`
                                                                                                :  +- SubqueryAlias `originaldb`
                                                                                                :     +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, monotonically_increasing_id() AS lineId#68L]
                                                                                                :        +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv
                                                                                                +- SubqueryAlias `n`
                                                                                                   +- SubqueryAlias `niddf`
                                                                                                      +- GlobalLimit 14
                                                                                                         +- LocalLimit 14
                                                                                                            +- Project [lineId#65L]
                                                                                                               +- Sort [_nondeterministic#62 ASC NULLS FIRST], true
                                                                                                                  +- Project [lineId#65L, rand(1929776526816083810) AS _nondeterministic#62]
                                                                                                                     +- Project [lineId#65L]
                                                                                                                        +- SubqueryAlias `originaldb`
                                                                                                                           +- Project [code_number#10, clump_thickness#11, uniformity_of_cell_size#12, uniformity_of_cell_shape#13, marginal_adhesion#14, single_epithelial_cell_size#15, bare_nuclei#16, bland_chromatin#17, normal_nucleoli#18, mitoses#19, class#20, monotonically_increasing_id() AS lineId#65L]
                                                                                                                              +- Relation[code_number#10,clump_thickness#11,uniformity_of_cell_size#12,uniformity_of_cell_shape#13,marginal_adhesion#14,single_epithelial_cell_size#15,bare_nuclei#16,bland_chromatin#17,normal_nucleoli#18,mitoses#19,class#20] csv

2019-12-09 20:24:26 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:24:26
2019-12-09 20:26:06 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:26:06
2019-12-09 20:26:17 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:26:17
2019-12-09 20:27:16 ERROR Executor:91 â Exception in task 0.0 in stage 118.0 (TID 3288)
org.apache.spark.SparkException: Failed to execute user defined function($anonfun$11: (struct<type:tinyint,size:int,indices:array<int>,values:array<double>>) => struct<type:tinyint,size:int,indices:array<int>,values:array<double>>)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage12.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$15$$anon$2.hasNext(WholeStageCodegenExec.scala:655)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:255)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:247)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
	at org.apache.spark.scheduler.Task.run(Task.scala:123)
	at org.apache.spark.executor.Executor$TaskRunner$$anonfun$10.apply(Executor.scala:408)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1360)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:414)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.spark.SparkException: VectorIndexer encountered invalid value 26.0 on feature index 8. To handle or skip invalid value, try setting VectorIndexer.handleInvalid.
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10$$anonfun$apply$4.apply(VectorIndexer.scala:370)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10$$anonfun$apply$4.apply(VectorIndexer.scala:363)
	at scala.collection.immutable.HashMap$HashMap1.foreach(HashMap.scala:221)
	at scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10.apply(VectorIndexer.scala:363)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10.apply(VectorIndexer.scala:356)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$11.apply(VectorIndexer.scala:431)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$11.apply(VectorIndexer.scala:431)
	... 21 more
2019-12-09 20:27:16 ERROR TaskSetManager:70 â Task 0 in stage 118.0 failed 1 times; aborting job
2019-12-09 20:27:16 ERROR appraisal:54 â org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 118.0 failed 1 times, most recent failure: Lost task 0.0 in stage 118.0 (TID 3288, localhost, executor driver): org.apache.spark.SparkException: Failed to execute user defined function($anonfun$11: (struct<type:tinyint,size:int,indices:array<int>,values:array<double>>) => struct<type:tinyint,size:int,indices:array<int>,values:array<double>>)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage12.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$15$$anon$2.hasNext(WholeStageCodegenExec.scala:655)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:255)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:247)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
	at org.apache.spark.scheduler.Task.run(Task.scala:123)
	at org.apache.spark.executor.Executor$TaskRunner$$anonfun$10.apply(Executor.scala:408)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1360)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:414)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.spark.SparkException: VectorIndexer encountered invalid value 26.0 on feature index 8. To handle or skip invalid value, try setting VectorIndexer.handleInvalid.
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10$$anonfun$apply$4.apply(VectorIndexer.scala:370)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10$$anonfun$apply$4.apply(VectorIndexer.scala:363)
	at scala.collection.immutable.HashMap$HashMap1.foreach(HashMap.scala:221)
	at scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10.apply(VectorIndexer.scala:363)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10.apply(VectorIndexer.scala:356)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$11.apply(VectorIndexer.scala:431)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$11.apply(VectorIndexer.scala:431)
	... 21 more

Driver stacktrace:
2019-12-09 20:28:13 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:28:13
2019-12-09 20:28:35 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:28:35
2019-12-09 20:29:28 ERROR Executor:91 â Exception in task 13.0 in stage 87.0 (TID 2868)
org.apache.spark.SparkException: Failed to execute user defined function($anonfun$11: (struct<type:tinyint,size:int,indices:array<int>,values:array<double>>) => struct<type:tinyint,size:int,indices:array<int>,values:array<double>>)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage12.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$15$$anon$2.hasNext(WholeStageCodegenExec.scala:655)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:255)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:247)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
	at org.apache.spark.scheduler.Task.run(Task.scala:123)
	at org.apache.spark.executor.Executor$TaskRunner$$anonfun$10.apply(Executor.scala:408)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1360)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:414)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.spark.SparkException: VectorIndexer encountered invalid value 10.0 on feature index 6. To handle or skip invalid value, try setting VectorIndexer.handleInvalid.
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10$$anonfun$apply$4.apply(VectorIndexer.scala:370)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10$$anonfun$apply$4.apply(VectorIndexer.scala:363)
	at scala.collection.immutable.HashMap$HashMap1.foreach(HashMap.scala:221)
	at scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10.apply(VectorIndexer.scala:363)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10.apply(VectorIndexer.scala:356)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$11.apply(VectorIndexer.scala:431)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$11.apply(VectorIndexer.scala:431)
	... 21 more
2019-12-09 20:29:28 ERROR TaskSetManager:70 â Task 13 in stage 87.0 failed 1 times; aborting job
2019-12-09 20:29:28 ERROR appraisal:54 â org.apache.spark.SparkException: Job aborted due to stage failure: Task 13 in stage 87.0 failed 1 times, most recent failure: Lost task 13.0 in stage 87.0 (TID 2868, localhost, executor driver): org.apache.spark.SparkException: Failed to execute user defined function($anonfun$11: (struct<type:tinyint,size:int,indices:array<int>,values:array<double>>) => struct<type:tinyint,size:int,indices:array<int>,values:array<double>>)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage12.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$15$$anon$2.hasNext(WholeStageCodegenExec.scala:655)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:255)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:247)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
	at org.apache.spark.scheduler.Task.run(Task.scala:123)
	at org.apache.spark.executor.Executor$TaskRunner$$anonfun$10.apply(Executor.scala:408)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1360)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:414)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.spark.SparkException: VectorIndexer encountered invalid value 10.0 on feature index 6. To handle or skip invalid value, try setting VectorIndexer.handleInvalid.
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10$$anonfun$apply$4.apply(VectorIndexer.scala:370)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10$$anonfun$apply$4.apply(VectorIndexer.scala:363)
	at scala.collection.immutable.HashMap$HashMap1.foreach(HashMap.scala:221)
	at scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10.apply(VectorIndexer.scala:363)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10.apply(VectorIndexer.scala:356)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$11.apply(VectorIndexer.scala:431)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$11.apply(VectorIndexer.scala:431)
	... 21 more

Driver stacktrace:
2019-12-09 20:31:13 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:31:13
2019-12-09 20:32:28 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:32:28
2019-12-09 20:33:01 ERROR Executor:91 â Exception in task 3.0 in stage 82.0 (TID 2851)
org.apache.spark.SparkException: Failed to execute user defined function($anonfun$11: (struct<type:tinyint,size:int,indices:array<int>,values:array<double>>) => struct<type:tinyint,size:int,indices:array<int>,values:array<double>>)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage12.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$15$$anon$2.hasNext(WholeStageCodegenExec.scala:655)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:255)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:247)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
	at org.apache.spark.scheduler.Task.run(Task.scala:123)
	at org.apache.spark.executor.Executor$TaskRunner$$anonfun$10.apply(Executor.scala:408)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1360)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:414)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.spark.SparkException: VectorIndexer encountered invalid value 54.0 on feature index 8. To handle or skip invalid value, try setting VectorIndexer.handleInvalid.
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10$$anonfun$apply$4.apply(VectorIndexer.scala:370)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10$$anonfun$apply$4.apply(VectorIndexer.scala:363)
	at scala.collection.immutable.HashMap$HashMap1.foreach(HashMap.scala:221)
	at scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10.apply(VectorIndexer.scala:363)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10.apply(VectorIndexer.scala:356)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$11.apply(VectorIndexer.scala:431)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$11.apply(VectorIndexer.scala:431)
	... 21 more
2019-12-09 20:33:01 ERROR TaskSetManager:70 â Task 3 in stage 82.0 failed 1 times; aborting job
2019-12-09 20:33:01 ERROR appraisal:54 â org.apache.spark.SparkException: Job aborted due to stage failure: Task 3 in stage 82.0 failed 1 times, most recent failure: Lost task 3.0 in stage 82.0 (TID 2851, localhost, executor driver): org.apache.spark.SparkException: Failed to execute user defined function($anonfun$11: (struct<type:tinyint,size:int,indices:array<int>,values:array<double>>) => struct<type:tinyint,size:int,indices:array<int>,values:array<double>>)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage12.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$15$$anon$2.hasNext(WholeStageCodegenExec.scala:655)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:255)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:247)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
	at org.apache.spark.scheduler.Task.run(Task.scala:123)
	at org.apache.spark.executor.Executor$TaskRunner$$anonfun$10.apply(Executor.scala:408)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1360)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:414)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.spark.SparkException: VectorIndexer encountered invalid value 54.0 on feature index 8. To handle or skip invalid value, try setting VectorIndexer.handleInvalid.
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10$$anonfun$apply$4.apply(VectorIndexer.scala:370)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10$$anonfun$apply$4.apply(VectorIndexer.scala:363)
	at scala.collection.immutable.HashMap$HashMap1.foreach(HashMap.scala:221)
	at scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10.apply(VectorIndexer.scala:363)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$10.apply(VectorIndexer.scala:356)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$11.apply(VectorIndexer.scala:431)
	at org.apache.spark.ml.feature.VectorIndexerModel$$anonfun$11.apply(VectorIndexer.scala:431)
	... 21 more

Driver stacktrace:
2019-12-09 20:39:29 ERROR RandomForestExec$:52 â Appraisal Spark - Wall start time: 09/12/2019 20:39:29
